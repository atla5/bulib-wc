import{_ as e,e as n,f as t,g as o,j as a}from"./preview-bc6c89ca.js";import"./lit-html-2435d3b6.js";function i(){return(i=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)}const r={},l="wrapper";function s(e){let{components:t}=e,s=o(e,["components"]);return n(l,i({},r,s,{components:t,mdxType:"MDXLayout"}),n(a,{title:"JS Helpers|Analytics Tracking",mdxType:"Meta"}),n("h1",null,"Analytics Helper"),n("p",null,"Seeing statistics about how our elements and pages are interacted with helps us to understand how they're used."),n("h2",null,"Usages"),n("h3",null,"Registration"),n("p",null,"In order to ",n("strong",{parentName:"p"},"register a website/platform")," to be able to log any events, you have to add in the ",n("inlineCode",{parentName:"p"},"gtag")," or ",n("inlineCode",{parentName:"p"},"ga"),"\nscript into ",n("inlineCode",{parentName:"p"},"<head>")," element of the page."),n("pre",null,n("code",i({parentName:"pre"},{className:"language-html"}),'<head>\n  \x3c!-- Register Google Analytcis --\x3e\n  <script async src="https://www.googletagmanager.com/gtag/js?id=UA-0123456-1"><\/script>\n  <script id="google-analytics-registration" defer>\n    window.dataLayer = window.dataLayer || [];\n    function gtag(){dataLayer.push(arguments);}\n    gtag(\'js\', new Date());\n    gtag(\'config\', "UA-0123456-1");  \n  <\/script>\n</head>\n')),n("h3",null,"Adding Event Listeners to Specific Links"),n("p",null,"You can also listen to log when ",n("em",{parentName:"p"},"particular")," links are clicked by doing the following:"),n("ol",null,n("li",{parentName:"ol"},"import the ",n("inlineCode",{parentName:"li"},"addSendGAEventOnAnchorClickToAnchorElements")," method/s from the file (as served from the CDN) "),n("li",{parentName:"ol"},"identify a ",n("inlineCode",{parentName:"li"},"category")," and ",n("inlineCode",{parentName:"li"},"action")," to register the event under (specify what kind of event it is)"),n("li",{parentName:"ol"},"identify the particular ",n("inlineCode",{parentName:"li"},"selector")," needed to uniquely identify the element or elements you want to log "),n("li",{parentName:"ol"},"use the ",n("inlineCode",{parentName:"li"},"addSendGAEventOnAnchorClickToAnchorElements")," helper to attach the listeners to the appropriate elements"),n("li",{parentName:"ol"},"add ",n("inlineCode",{parentName:"li"},"window.onload")," listener to run steps 2-4 after the page loads")),n("pre",null,n("code",i({parentName:"pre"},{className:"language-html"}),'<head>\n  \x3c!-- Add EventListeners to \'General Context\' link clicks --\x3e\n  <script id="ga-events-for-general-context-link" type="module">\n\n    // import the \'@latest\' version of our particular helper from the CDN\n    import {addSendGAEventOnAnchorClickToAnchorElements} from "https://unpkg.com/bulib-wc@latest/src/_helpers/google_analytix.js?module";\n\n    window.onload = function(){\n\n      // prepare information about the event\n      let category = "general-context-link";\n      let action = "particular-typeof-link";\n\n      // collect and apply listeners to component one\n      action = "component-one";\n      let componentOneLinks = document.querySelectorAll("div.class > section.component-one a");\n      addSendGAEventOnAnchorClickToAnchorElements(componentOneLinks, category, action);\n\n      // collect and apply listeners to component two\n      action = "component-two";\n      let componentTwoLinks = document.querySelectorAll("#an-id-selector a");\n      addSendGAEventOnAnchorClickToAnchorElements(researchCollections, category, action);\n    }\n  <\/script>\n</head>\n')),n("h3",null,"Publish a Custom Event in a Helper/Component"),n("p",null,"We also want to track events within/between our various components, and it's actually easiest when\nyou're inside of the ",n("inlineCode",{parentName:"p"},"src/")," directory."),n("pre",null,n("code",i({parentName:"pre"},{className:"language-js"}),'// use a relative import to get the helper from within the whole bundle\nimport {sendGAEvent} from \'../_helpers/google_analytix\';\n\n// prepare information about the event\nconst event_category  = "overall-context";\nlet event_action      = "secondary-distinction";\nlet event_label       = "particular-info";\n\n// example of a function that does something we want to track\nfunction doTheFirstTypeOfThing(thing1){\n\n  // the part that does the thing\n  console.log("doing the first thing: " + thing1);\n\n  // logging about the first thing\n  event_action = "first-thing";\n  event_label = thing1.pieceOfInfo;\n  sendGAEvent(event_category, event_action, event_label);\n}\n\n// example of another function we want to track in the same file/context\nfunction doTheSecondTypeOfThing(thing2){\n\n  // the part that does the second thing\n  console.log("doing the second thing: " + thing2);\n\n  // logging about the second thing\n  event_action = "second-thing";\n  event_label = thing2.pieceOfInfo; \n  sendGAEvent(event_category, event_action, event_label);\n}\n')),n("p",null,n("em",{parentName:"p"},"NOTE: You can see working examples of this in ",n("inlineCode",{parentName:"em"},"src/search/search.js")," and ",n("inlineCode",{parentName:"em"},"src/libhours/libhours.js"))))}s.isMDXComponent=!0;const c=()=>{throw new Error("Docs-only story")};c.story={parameters:{docsOnly:!0}};const p={title:"JS Helpers|Analytics Tracking",includeStories:["__page"]},d={};p.parameters=p.parameters||{},p.parameters.docs=e({},p.parameters.docs||{},{page:()=>n(t,{mdxStoryNameToId:d},n(s,null))});export default p;export{c as __page};
//# sourceMappingURL=analytics.stories-d6d5a55a.js.map
