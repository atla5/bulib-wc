{"version":3,"file":"bulib-hours-4e1832b2.js","sources":["../../node_modules/lit-html/directives/until.js","../../src/libhours/libhours.js","../../src/libhours/bulib-hours.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isPrimitive } from '../lib/parts.js';\nimport { directive } from '../lit-html.js';\nconst _state = new WeakMap();\n// Effectively infinity, but a SMI.\nconst _infinity = 0x7fffffff;\n/**\n * Renders one of a series of values, including Promises, to a Part.\n *\n * Values are rendered in priority order, with the first argument having the\n * highest priority and the last argument having the lowest priority. If a\n * value is a Promise, low-priority values will be rendered until it resolves.\n *\n * The priority of values can be used to create placeholder content for async\n * data. For example, a Promise with pending content can be the first,\n * highest-priority, argument, and a non_promise loading indicator template can\n * be used as the second, lower-priority, argument. The loading indicator will\n * render immediately, and the primary content will render when the Promise\n * resolves.\n *\n * Example:\n *\n *     const content = fetch('./content.txt').then(r => r.text());\n *     html`${until(content, html`<span>Loading...</span>`)}`\n */\nexport const until = directive((...args) => (part) => {\n    let state = _state.get(part);\n    if (state === undefined) {\n        state = {\n            lastRenderedIndex: _infinity,\n            values: [],\n        };\n        _state.set(part, state);\n    }\n    const previousValues = state.values;\n    let previousLength = previousValues.length;\n    state.values = args;\n    for (let i = 0; i < args.length; i++) {\n        // If we've rendered a higher-priority value already, stop.\n        if (i > state.lastRenderedIndex) {\n            break;\n        }\n        const value = args[i];\n        // Render non-Promise values immediately\n        if (isPrimitive(value) ||\n            typeof value.then !== 'function') {\n            part.setValue(value);\n            state.lastRenderedIndex = i;\n            // Since a lower-priority value will never overwrite a higher-priority\n            // synchronous value, we can stop processsing now.\n            break;\n        }\n        // If this is a Promise we've already handled, skip it.\n        if (i < previousLength && value === previousValues[i]) {\n            continue;\n        }\n        // We have a Promise that we haven't seen before, so priorities may have\n        // changed. Forget what we rendered before.\n        state.lastRenderedIndex = _infinity;\n        previousLength = 0;\n        Promise.resolve(value).then((resolvedValue) => {\n            const index = state.values.indexOf(value);\n            // If state.values doesn't contain the value, we've re-rendered without\n            // the value, so don't render it. Then, only render if the value is\n            // higher-priority than what's already been rendered.\n            if (index > -1 && index < state.lastRenderedIndex) {\n                state.lastRenderedIndex = index;\n                part.setValue(resolvedValue);\n                part.commit();\n            }\n        });\n    }\n});\n//# sourceMappingURL=until.js.map","import {LitElement, html} from 'lit-element/lit-element';\nimport {until} from 'lit-html/directives/until';\n\nimport {getLibraryInfoFromCode} from '../_helpers/lib_info_helper.js';\nimport {sendGAEvent} from '../_helpers/google_analytix';\n\nconst all_lib_hours_url = \"https://www.bu.edu/library/about/hours/\";\nconst cors_anywhere_prefix = 'https://cors-anywhere.herokuapp.com/';\nconst libcal_hours_api_url = 'https://api3.libcal.com/api_hours_today.php';\n\n\n/** display the hours of operation for a given library */\nexport default class BULibHours extends LitElement {\n\n  // use light DOM to allow for external styling (bulib-header, .white-link)\n  createRenderRoot(){ return this; } \n\n  static get properties() {\n    return { \n      /** established which library we're displaying the hours/info of */\n      library: {type: String}, \n      /** alters the default display to be more succint/compact */\n      short:{type: Boolean},\n      /** alters the default display to be more descriptive/verbose */\n      long: {type: Boolean},\n      /** provides means of adding classes to the inner link */\n      link_class: {type: String},\n\n      /** [debugging] enable logging to the console */\n      debug: {type: Boolean}\n    };\n  }\n  \n  _fetchHoursData(libCode, lid){\n    if(!lid){ lid = 1475; }\n    let url = `${cors_anywhere_prefix}${libcal_hours_api_url}?format=json&systemTime=0&iid=1740&lid=${lid}`;\n    this._logToConsole(\"calling 'libcal' with lid: '\" + lid + \"'.\");\n    this._logGAEvent(\"api-call\", libCode);\n    return fetch( url, { method: 'GET', mode:'cors'})\n      .then(r => r.json()).then(data => (data.locations[0]).rendered);\n  };\n\n  render() {\n    // get general library information\n    let libCode = this.library || \"mugar-memorial\";\n    let lib_info = getLibraryInfoFromCode(libCode);\n    \n    // extract relevant pieces from lib_info\n    let library_name = lib_info.short || lib_info.name;\n    let lid = lib_info.libcal_lid;\n    if(library_name.includes(\"BU Librar\")){ library_name = \"Mugar Library\"; }\n\n    // prepare parts\n    this._logToConsole(`rendering hours for ${library_name} (code:'${libCode}').`);\n    let hours_loading = html`\n      <span id=\"hours-display\" class=\"inline\" aria-label=\"today's hours for ${library_name}\">\n        ${until(this._fetchHoursData(libCode, lid), html`<small> loading hours...</small>`)}\n      </span>`;\n    let clock_icon = html`<img alt=\"clock-icon\" id=\"clock-icon\" src=\"https://cdn.jsdelivr.net/npm/bulib-wc@latest/dist/icons/clock-icon-24px.svg\">`;\n    \n    // establish variants \n    let none_display = html``;\n    let small_display = html`\n      <a title=\"today's hours for ${library_name}\" class=\"${this.link_class}\"\n         @click=\"${(ev) => {this._logGAEvent(\"clicked\", libCode)}}\" href=\"${all_lib_hours_url}\">${hours_loading}</a>`;\n    let medium_display = html`<div class=\"txtv center\">${clock_icon}&nbsp;&nbsp;<strong>${library_name}:</strong>&nbsp;${hours_loading}</div>`;\n    let large_display = html`\n      <div id=\"hours-top\">\n        <strong>${library_name}:</strong>&nbsp;${hours_loading}</div>\n      </div>\n      <div id=\"hours-btm\">\n        <small>\n          <a title=\"today's hours for all bu-libraries\" class=\"${this.link_class}\" \n             @click=\"${(ev) => {this._logGAEvent(\"clicked\", \"all\")}}\" href=\"${all_lib_hours_url}\">see all location hours</a>\n        </small>\n      </div>\n    `;\n    \n    // select between the variants based on the available data and settings\n    let libhours_display;\n    if(!lid){ libhours_display = none_display; }\n    if(this.short){ libhours_display = small_display; }\n    else if(this.long){ libhours_display = large_display; }\n    else{ libhours_display = medium_display; }\n\n    return html`\n      <style> \n        bulib-hours:host { color: white; } \n        a > span { text-decoration: underline; }\n        .txtv { display: flex; align-items: center; text-align: center; }\n      </style>\n      <div class=\"libhours\">${libhours_display}</div>\n    `;\n  }\n\n  _logGAEvent(action, libCode){\n    sendGAEvent(\"bulib-hours\", action, libCode || this.library);\n  }\n  \n  _logToConsole(message){\n    if(this.debug){ console.log(\"bulib-hours) \" + message); }\n  }\n\n}\n","import BULibHours from './libhours';\n\nwindow.customElements.define(\"bulib-hours\", BULibHours);"],"names":["_state","WeakMap","until","directive","args","part","state","get","undefined","lastRenderedIndex","values","set","previousValues","previousLength","length","i","value","isPrimitive","then","setValue","Promise","resolve","resolvedValue","index","indexOf","commit","BULibHours","this","libCode","lid","url","_logToConsole","_logGAEvent","fetch","method","mode","r","json","data","locations","rendered","library","lib_info","getLibraryInfoFromCode","library_name","short","name","libcal_lid","includes","libhours_display","hours_loading","html","_fetchHoursData","clock_icon","none_display","small_display","link_class","ev","_this","medium_display","large_display","long","action","sendGAEvent","message","debug","console","log","type","String","Boolean","LitElement","window","customElements","define"],"mappings":";;;;;;;;;;;;;;AA2BA,IAAMA,EAAS,IAAIC,QAuBNC,EAAQC,GAAU,sCAAIC,2BAAAA,yBAAoB,SAACC,OAClDC,EAAQN,EAAOO,IAAIF,QACTG,IAAVF,IACFA,EAAQ,CACNG,kBAzBY,WA0BZC,OAAQ,IAEVV,EAAOW,IAAIN,EAAMC,QAEbM,EAAiBN,EAAMI,OACzBG,EAAiBD,EAAeE,OACpCR,EAAMI,OAASN,iBAENW,MAEHA,EAAIT,EAAMG,oCAIRO,EAAQZ,EAAKW,UAGfE,EAAYD,IACgC,mBAApCA,EAA2BE,MACrCb,EAAKc,SAASH,GACdV,EAAMG,kBAAoBM,WAOxBA,EAAIF,GAAkBG,IAAUJ,EAAeG,eAMnDT,EAAMG,kBA3DQ,WA4DdI,EAAiB,OAEjBO,QAAQC,QAAQL,GAAOE,MAAK,SAACI,OACrBC,EAAQjB,EAAMI,OAAOc,QAAQR,GAI/BO,GAAS,GAAKA,EAAQjB,EAAMG,oBAC9BH,EAAMG,kBAAoBc,EAC1BlB,EAAKc,SAASG,GACdjB,EAAKoB,iBApCX,IAAK,IAAIV,EAAI,EAAGA,EAAIX,EAAKU,OAAQC,IAAK,UAA7BA,2+CCzDX,IAMqBW,kJAGQC,6CAkBXC,EAASC,GACnBA,IAAMA,EAAM,UACZC,YA5BqB,+CACA,gGA2ByED,eAC7FE,cAAc,+BAAiCF,EAAM,WACrDG,YAAY,WAAYJ,GACtBK,MAAOH,EAAK,CAAEI,OAAQ,MAAOC,KAAK,SACtCjB,MAAK,SAAAkB,UAAKA,EAAEC,UAAQnB,MAAK,SAAAoB,UAASA,EAAKC,UAAU,GAAIC,wDAKpDZ,EAAUD,KAAKc,SAAW,iBAC1BC,EAAWC,EAAuBf,GAGlCgB,EAAeF,EAASG,OAASH,EAASI,KAC1CjB,EAAMa,EAASK,WAChBH,EAAaI,SAAS,eAAeJ,EAAe,sBAGlDb,4CAAqCa,qBAAuBhB,cA0B7DqB,EAzBAC,EAAgBC,MACsDP,EACpE1C,EAAMyB,KAAKyB,gBAAgBxB,EAASC,GAAMsB,SAE5CE,EAAaF,OAGbG,EAAeH,OACfI,EAAgBJ,MACYP,EAAwBjB,KAAK6B,YAC9C,SAACC,GAAQC,EAAK1B,YAAY,UAAWJ,KA1D9B,0CA0DwEsB,GAC1FS,EAAiBR,MAAgCE,EAAiCT,EAA+BM,GACjHU,EAAgBT,MAENP,EAA+BM,EAIgBvB,KAAK6B,YAC/C,SAACC,GAAQC,EAAK1B,YAAY,UAAW,SAnElC,kDA0ElBH,IAAMoB,EAAmBK,GACbL,EAAbtB,KAAKkB,MAA2BU,EAC3B5B,KAAKkC,KAA0BD,EACdD,EAElBR,MAMmBF,uCAIhBa,EAAQlC,GAClBmC,EAAY,cAAeD,EAAQlC,GAAWD,KAAKc,+CAGvCuB,GACTrC,KAAKsC,OAAQC,QAAQC,IAAI,gBAAkBH,8CAlFvC,CAELvB,QAAS,CAAC2B,KAAMC,QAEhBxB,MAAM,CAACuB,KAAME,SAEbT,KAAM,CAACO,KAAME,SAEbd,WAAY,CAACY,KAAMC,QAGnBJ,MAAO,CAACG,KAAME,iBAjBoBC,GCVxCC,OAAOC,eAAeC,OAAO,cAAehD"}