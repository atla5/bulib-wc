System.register(["./lit-html-29e874e8.js","./preview-0e9ae54d.js"],(function(e){"use strict";var n,a,t,r;return{setters:[function(e){n=e.g,a=e.i},function(e){t=e.e,r=e.f}],execute:function(){function i(){return(i=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var a=arguments[n];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(e[t]=a[t])}return e}).apply(this,arguments)}var l,s=(l="Meta",function(e){return console.warn("Component "+l+" was not imported, exported, or provided by MDXProvider as global scope"),t("div",e)}),o={},p="wrapper";function m(e){var n=e.components,r=a(e,["components"]);return t(p,i({},o,r,{components:n,mdxType:"MDXLayout"}),t(s,{title:"Welcome|Principle of Least Power",mdxType:"Meta"}),t("h1",null,"Principle of Least Power"),t("p",null,"I've talked about this in the ",t("a",i({parentName:"p"},{href:"https://docs.google.com/document/d/1W--y5hT2MFRZeCHsT9cEPP7s8OEt9fWHznylBPTO1Es/edit#"}),"overall technical strategy"),",\nbut I think it's very important. "),t("p",null,"The principle essentially boils down to: ",t("strong",{parentName:"p"},"don’t use a sledgehammer where a regular hammer will suffice"),". "),t("p",null,"Give preference to the ",t("strong",{parentName:"p"},"simplest solution")," that "),t("ul",null,t("li",{parentName:"ul"},"is easier to maintain/understand, "),t("li",{parentName:"ul"},"assumes the least about the end user (internet connection speed, javascript enabled, screenreader, etc) "),t("li",{parentName:"ul"},"and relies on the fewest dependencies, abstractions, and complications ")),t("h2",null,"Applications/Examples"),t("p",null,"In practice, this amounts to a bit of a repeated cascade of choices from server-side to static all\nthe way down to basic HTML "),t("ul",null,t("li",{parentName:"ul"},"don’t use ",t("strong",{parentName:"li"},"a server-side language")," (e.g. php) when you can use static or client-side instead"),t("li",{parentName:"ul"},"don't use ",t("strong",{parentName:"li"},"a large framework")," when you're using a small part of it or could more simply write your own"),t("li",{parentName:"ul"},"don’t use ",t("strong",{parentName:"li"},"a library")," when you can implement it almost as easily with use vanilla javascript "),t("li",{parentName:"ul"},"don’t use ",t("strong",{parentName:"li"},"javascript")," when you can just use html+css (e.g. bulib-header)"),t("li",{parentName:"ul"},"don’t ",t("strong",{parentName:"li"},"remake/repurpose")," something that html already does effectively (e.g. form submission)")),t("p",null,"At a higher level this gets to: "),t("ul",null,t("li",{parentName:"ul"},t("strong",{parentName:"li"},"avoid build steps and configuration")," hells where possible/makes sense",t("ul",{parentName:"li"},t("li",{parentName:"ul"},"prefer using ",t("inlineCode",{parentName:"li"},"css variables")," to something like ",t("inlineCode",{parentName:"li"},"scss")," variables and methods"),t("li",{parentName:"ul"},"simplify configuration, automation, deployment with standard ",t("inlineCode",{parentName:"li"},"package.json")," on ",t("inlineCode",{parentName:"li"},"npm")),t("li",{parentName:"ul"},"leverage the ",t("inlineCode",{parentName:"li"},"js module")," standard and ",t("inlineCode",{parentName:"li"},"unpkg")," (potentially pika) to avoid transpiling/bundling"))),t("li",{parentName:"ul"},t("strong",{parentName:"li"},"use Web Standards")," whenever possible/it makes sense",t("ul",{parentName:"li"},t("li",{parentName:"ul"},"prefer using ",t("inlineCode",{parentName:"li"},"css grid")," to more complicated and heavy js/css libraries (e.g. material, bootstrap, foundation)")))),t("h2",null,"Benefits"),t("ul",null,t("li",{parentName:"ul"},t("strong",{parentName:"li"},"simplicity"),": developer or debugger has less to learn, understand, and keep in mind while doing their work "),t("li",{parentName:"ul"},t("strong",{parentName:"li"},"independence"),": keeping up with dependencies can be a chore and add maintenance costs + vulnerability to breaking"),t("li",{parentName:"ul"},t("strong",{parentName:"li"},"interoperability"),": as you increase your technical complexity, browser compatibility (and occasionally accessibility) goes down and brittleness/complicatedness increases"),t("li",{parentName:"ul"},t("strong",{parentName:"li"},"longevity"),": code that is closer to the web standards (less dependent on trends and framework-of-the-day) is less likely to become 'legacy' and have to be redone over time or decommissioned "),t("li",{parentName:"ul"},t("strong",{parentName:"li"},"hiring/experience"),": we want interns/student workers to get transferable experience, and don't want to look for developers based on framework-specific expertise")))}m.isMDXComponent=!0,e("__page",(function(){throw new Error("Docs-only story")})).story={parameters:{docsOnly:!0}};var d={title:"Welcome|Principle of Least Power",includeStories:["__page"]},u={};d.parameters=d.parameters||{},d.parameters.docs=n({},d.parameters.docs||{},{page:function(){return t(r,{mdxStoryNameToId:u},t(m,null))}}),e("default",d)}}}));
//# sourceMappingURL=principles.stories-67d67fb4.js.map
