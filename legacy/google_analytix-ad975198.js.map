{"version":3,"file":"google_analytix-ad975198.js","sources":["../../src/_helpers/google_analytix.js"],"sourcesContent":["const DEBUG_ANALYTICS = false;\nconst PREVENT_GA_CALL = false;\n\nfunction logGoogleAnalyticsMessage(message){\n  if(DEBUG_ANALYTICS){ console.log(\"google_analytics_helper) \" + message); }\n}\n\nexport function sendGAEvent(eventName, action, label, value){\n  /** note: this assumes that a 'gtag' or a 'ga' has already been initialized/added to `window` */\n  let value_text = (value == null) || (value == undefined) ? \"\": `, value='${value}'`;\n  logGoogleAnalyticsMessage(`request made to sendGAEvent('${eventName}', '${action}', '${label}'${value_text})`);\n  try{\n    if(window.gtag && !PREVENT_GA_CALL){ \n      window.gtag('event', action, {\n        'event_category': eventName, 'event_label': label, 'value': value\n      });\n      logGoogleAnalyticsMessage(\"window.gtag() found and called\");\n    }else if(window.ga && !PREVENT_GA_CALL){ \n      window.ga('send', eventName, action, label);\n      logGoogleAnalyticsMessage(\"window.ga() found and called\");\n    }else{\n      logGoogleAnalyticsMessage(`event '${eventName}' was NOT SENT to either 'ga()' nor 'gtag()' [PREVENT_GA_CALL='${PREVENT_GA_CALL}']`);\n    }\n  }catch(err){\n    logGoogleAnalyticsMessage(\"ERROR! - unable to sendGAEvent with gtag, ga, or nothing.\"); \n    if(DEBUG_ANALYTICS){ console.log(err); }\n  }\n}\n\nexport function sendGAEventFromClickEvent(clickEvent, eventName, actionName){\n  let contentClicked = \"[unknown]\"; \n  \n  // obtain a label for the clicked link from its markup\n  try{ \n    contentClicked = clickEvent.target.innerText \n      ? clickEvent.target.innerText \n      : clickEvent.target.querySelector(\"span\").innerText \n      || \"[unknown]\";\n    contentClicked = contentClicked.replace(/[^a-zA-Z0-9 ]/g, '');  // remove special characters\n    contentClicked = contentClicked.toLowerCase().replace(/ +/g,\"-\");   // slugify (lowercase, dashes)\n  }catch(err){\n    logGoogleAnalyticsMessage(\"error getting contentClicked from clickEvent: \");\n    if(DEBUG_ANALYTICS){ console.log(err); }\n  }\n\n  // allow user to specify an actionName as well as the eventName, pushing contentClicked into the label\n  if(!actionName || actionName == \"\"){\n    logGoogleAnalyticsMessage(`actionName considered 'undefined' or empty. sending action:'${contentClicked}', label:'${window.location.pathname}'.`)\n    sendGAEvent(eventName, contentClicked, window.location.pathname);\n  }else{\n    logGoogleAnalyticsMessage(`actionName '${actionName}' registered as a real value, sending action with label as contentClicked: '${contentClicked}'`)\n    sendGAEvent(eventName, actionName, contentClicked);\n  }\n}\n\nexport function addSendGAEventOnAnchorClickToAnchorElements(anchorElements, eventName, actionName){\n  logGoogleAnalyticsMessage(`adding click listeners with eventName:'${eventName}', actionName:'${actionName}'`);\n  for(let i=0; i<anchorElements.length; i++){\n    anchorElements[i].addEventListener(\"click\", (ev) => sendGAEventFromClickEvent(ev, eventName, actionName));\n  }\n}\n"],"names":["clickEvent","eventName","actionName","contentClicked","target","innerText","querySelector","replace","toLowerCase","err","sendGAEvent","window","location","pathname","PREVENT_GA_CALL","action","label","value","gtag","ga"],"mappings":"4EA6BO,SAAmCA,EAAYC,EAAWC,OAC3DC,EAAiB,gBASnBA,GADAA,GAJAA,EAAiBH,EAAWI,OAAOC,UAC/BL,EAAWI,OAAOC,UAClBL,EAAWI,OAAOE,cAAc,QAAQD,WACvC,aAC2BE,QAAQ,iBAAkB,KAC1BC,cAAcD,QAAQ,MAAM,KAC7D,MAAME,IAMHP,GAA4B,IAAdA,EAKhBQ,EAAYT,EAAWC,EAAYC,GAHnCO,EAAYT,EAAWE,EAAgBQ,OAAOC,SAASC,iBA/C3D,IAAMC,GAAkB,EAMjB,SAASJ,EAAYT,EAAWc,EAAQC,EAAOC,OAK/CN,OAAOO,OAASJ,EACjBH,OAAOO,KAAK,QAASH,EAAQ,gBACTd,cAA0Be,QAAgBC,IAGvDN,OAAOQ,KAAOL,EACrBH,OAAOQ,GAAG,OAAQlB,EAAWc,EAAQC,oBAGDf,4EAA2Ea,QAElH,MAAML"}