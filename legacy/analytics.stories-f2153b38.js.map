{"version":3,"file":"analytics.stories-f2153b38.js","sources":["../../src/_helpers/analytics.stories.mdx"],"sourcesContent":["import { Story, Preview, Meta, Props, html, withKnobs, withWebComponentsKnobs } from '@open-wc/demoing-storybook';\n\n<Meta title=\"JS Helpers|Analytics Tracking\"/>\n\n# Analytics Helper\n\nSeeing statistics about how our elements and pages are interacted with helps us to understand how they're used.\n\n## Usages \n\n### Registration\n\nIn order to **register a website/platform** to be able to log any events, you have to add in the `gtag` or `ga` \n  script into `<head>` element of the page.\n\n```html\n<head>\n  <!-- Register Google Analytcis -->\n  <script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-0123456-1\"></script>\n  <script id=\"google-analytics-registration\" defer>\n    window.dataLayer = window.dataLayer || [];\n    function gtag(){dataLayer.push(arguments);}\n    gtag('js', new Date());\n    gtag('config', \"UA-0123456-1\");  \n  </script>\n</head>\n```\n\n### Adding Event Listeners to Specific Links \n\nYou can also listen to log when _particular_ links are clicked by doing the following:\n\n1. import the `addSendGAEventOnAnchorClickToAnchorElements` method/s from the file (as served from the CDN) \n2. identify a `category` and `action` to register the event under (specify what kind of event it is)\n3. identify the particular `selector` needed to uniquely identify the element or elements you want to log \n4. use the `addSendGAEventOnAnchorClickToAnchorElements` helper to attach the listeners to the appropriate elements\n5. add `window.onload` listener to run steps 2-4 after the page loads\n\n```html\n<head>\n  <!-- Add EventListeners to 'General Context' link clicks -->\n  <script id=\"ga-events-for-general-context-link\" type=\"module\">\n\n    // import the '@latest' version of our particular helper from the CDN\n    import {addSendGAEventOnAnchorClickToAnchorElements} from \"https://unpkg.com/bulib-wc@latest/src/_helpers/google_analytix.js?module\";\n\n    window.onload = function(){\n\n      // prepare information about the event\n      let category = \"general-context-link\";\n      let action = \"particular-typeof-link\";\n\n      // collect and apply listeners to component one\n      action = \"component-one\";\n      let componentOneLinks = document.querySelectorAll(\"div.class > section.component-one a\");\n      addSendGAEventOnAnchorClickToAnchorElements(componentOneLinks, category, action);\n\n      // collect and apply listeners to component two\n      action = \"component-two\";\n      let componentTwoLinks = document.querySelectorAll(\"#an-id-selector a\");\n      addSendGAEventOnAnchorClickToAnchorElements(researchCollections, category, action);\n    }\n  </script>\n</head>\n```\n\n### Publish a Custom Event in a Helper/Component\n\nWe also want to track events within/between our various components, and it's actually easiest when \n  you're inside of the `src/` directory.\n\n```js\n// use a relative import to get the helper from within the whole bundle\nimport {sendGAEvent} from '../_helpers/google_analytix';\n\n// prepare information about the event\nconst event_category  = \"overall-context\";\nlet event_action      = \"secondary-distinction\";\nlet event_label       = \"particular-info\";\n\n// example of a function that does something we want to track\nfunction doTheFirstTypeOfThing(thing1){\n\n  // the part that does the thing\n  console.log(\"doing the first thing: \" + thing1);\n\n  // logging about the first thing\n  event_action = \"first-thing\";\n  event_label = thing1.pieceOfInfo;\n  sendGAEvent(event_category, event_action, event_label);\n}\n\n// example of another function we want to track in the same file/context\nfunction doTheSecondTypeOfThing(thing2){\n\n  // the part that does the second thing\n  console.log(\"doing the second thing: \" + thing2);\n\n  // logging about the second thing\n  event_action = \"second-thing\";\n  event_label = thing2.pieceOfInfo; \n  sendGAEvent(event_category, event_action, event_label);\n}\n```\n\n_NOTE: You can see working examples of this in `src/search/search.js` and `src/libhours/libhours.js`_\n"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdx","mdxType","Meta","title","parentName","isMDXComponent","Error","story","parameters","docsOnly","componentMeta","includeStories","mdxStoryNameToId","docs","page","AddContext"],"mappings":"sZAaA,IAAMA,EAAc,GAGdC,EAAY,UAClB,SAASC,SACPC,IAAAA,WACGC,6BAEIC,EAACJ,OAAcD,EAAiBI,GAAOD,WAAYA,EAAYG,QAAQ,cAE5ED,EAACE,GAAKC,MAAM,gCAAgCF,QAAQ,SACpDD,gCACAA,8HACAA,sBACAA,4BACAA,0BAAmBA,YAAQI,WAAW,6FAAsGJ,gBAAYI,WAAW,oBAAiCJ,gBAAYI,WAAW,4BACjNJ,gBAAYI,WAAW,wCACjCJ,aAAKA,YAAMI,WAAW,OAAU,WACf,2ZAYjBJ,wDACAA,8CAAuCA,QAAII,WAAW,iEACtDJ,YACEA,QAAII,WAAW,oBAAoBJ,gBAAYI,WAAW,0GAC1DJ,QAAII,WAAW,oBAAoBJ,gBAAYI,WAAW,0BAAuCJ,gBAAYI,WAAW,mFACxHJ,QAAII,WAAW,iCAAiCJ,gBAAYI,WAAW,2FACvEJ,QAAII,WAAW,iBAAiBJ,gBAAYI,WAAW,oHACvDJ,QAAII,WAAW,aAAaJ,gBAAYI,WAAW,2EAErDJ,aAAKA,YAAMI,WAAW,OAAU,WACf,wmCA2BjBJ,4DACAA,uIACmBA,gBAAYI,WAAW,4BAC1CJ,aAAKA,YAAMI,WAAW,OAAU,WACf,+jCAiCjBJ,WAAGA,QAAII,WAAW,sDAAsDJ,gBAAYI,WAAW,sCAAmDJ,gBAAYI,WAAW,qCAK7KP,EAAWQ,gBAAiB,cAEN,iBAAc,IAAIC,MAAM,sBAEvCC,MAAQ,CAAEC,WAAY,CAAEC,UAAU,IAEzC,IAAMC,EAAgB,CAAEP,MAAO,gCAAiCQ,eAAgB,CAAC,WAE3EC,EAAmB,GAEzBF,EAAcF,WAAaE,EAAcF,YAAc,GACvDE,EAAcF,WAAWK,UACnBH,EAAcF,WAAWK,MAAQ,IACrCC,KAAM,kBAAMd,EAACe,GAAWH,iBAAkBA,GAAkBZ,EAACH"}