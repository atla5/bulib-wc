System.register(["./lit-html-29e874e8.js","./preview-0e9ae54d.js"],(function(e){"use strict";var a,n,t,l;return{setters:[function(e){a=e.g,n=e.i},function(e){t=e.e,l=e.f}],execute:function(){function i(){return(i=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e}).apply(this,arguments)}var r,o=(r="Meta",function(e){return console.warn("Component "+r+" was not imported, exported, or provided by MDXProvider as global scope"),t("div",e)}),s={},u="wrapper";function p(e){var a=e.components,l=n(e,["components"]);return t(u,i({},s,l,{components:a,mdxType:"MDXLayout"}),t(o,{title:"Welcome|CSS Variables",mdxType:"Meta"}),t("h1",null,"CSS Variables"),t("p",null,"Replace hardcoded css properties (e.g. ",t("inlineCode",{parentName:"p"},"#1B598C"),") with meaningful keys (like ",t("inlineCode",{parentName:"p"},"--color-button-background-dark"),")\nthat are way easier to read! "),t("h2",null,"What They Are"),t("ul",null,t("li",{parentName:"ul"},t("a",i({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties"}),"css variables")," are another one of those standards updates that add more advanced functionality to the platform itself (CSS3 in this case)"),t("li",{parentName:"ul"},"essentially, they allow you to store, extract, and override values from within vanilla CSS, ",t("em",{parentName:"li"},"without")," requiring an extra build step (like with ",t("inlineCode",{parentName:"li"},"scss")," or ",t("inlineCode",{parentName:"li"},"post-css"),") ")),t("h2",null,"Where/When to Use Them"),t("ul",null,t("li",{parentName:"ul"},"CSS variables are most useful for establishing thematic consistency and reducing code duplication. "),t("li",{parentName:"ul"},"You ",t("em",{parentName:"li"},"should")," use them when...",t("ul",{parentName:"li"},t("li",{parentName:"ul"},"you find yourself updating the same value in multiple places"),t("li",{parentName:"ul"},"you want to be able to show the same thing across platforms"))),t("li",{parentName:"ul"},"You should ",t("em",{parentName:"li"},"avoid using")," them when... ",t("ul",{parentName:"li"},t("li",{parentName:"ul"},"you can achieve the same effect easily using ",t("a",i({parentName:"li"},{href:"https://critter.blog/2018/06/08/in-defense-of-functional-css/"}),"functional css")," classes (e.g. ",t("inlineCode",{parentName:"li"},"plm")," => padding, left, medium)"),t("li",{parentName:"ul"},"the change you're making only affects one platform or site (and should likely just be contained in the site-specific css) ")))),t("h2",null,"Why We Use Them"),t("ul",null,t("li",{parentName:"ul"},t("strong",{parentName:"li"},"consistency"),": enable ",t("em",{parentName:"li"},"each platform")," to know about and consume standard thematic elements "),t("li",{parentName:"ul"},t("strong",{parentName:"li"},"flexibility"),": provide a powerful and malleable way to access or override at most any level "),t("li",{parentName:"ul"},t("strong",{parentName:"li"},"lightweight"),": enable styling and theming choices with simple ",t("em",{parentName:"li"},"css changes")," in a very small number of lines "),t("li",{parentName:"ul"},t("strong",{parentName:"li"},"principle of least power"),": solve things in css (one of the easiest to learn and update) instead of using the markup or javascript/web component"),t("li",{parentName:"ul"},t("strong",{parentName:"li"},"graceful degradation"),": provides a legible and obvious fallback for when the css variable can't be found"),t("li",{parentName:"ul"},t("strong",{parentName:"li"},"declarative"),": enable the theming exceptions of a site to be read immediately in the site-specific css")),t("pre",null,t("code",i({parentName:"pre"},{className:"language-css"}),"/* - sites/wordpress/wordpress.css - */\nbody {\n  --color-primary-background: #212121;\n  --color-button-background-accent: blue;\n}\n")),t("h2",null,"How to Use Them"),t("ul",null,t("li",{parentName:"ul"},"you ",t("strong",{parentName:"li"},"set the variable")," in nearly the exact same manner that you would adjust the padding")),t("pre",null,t("code",i({parentName:"pre"},{className:"language-css"}),"div.class {\n  --css-variable-name: value;\n  padding-left: 10px;\n}\n")),t("ul",null,t("li",{parentName:"ul"},"you can ",t("strong",{parentName:"li"},"consume that variable")," like so wherever it is underneath that defined cascade, ")),t("pre",null,t("code",i({parentName:"pre"},{className:"language-css"}),"div.class > .subclass {\n  background-color: var(--css-variable-name, default);  \n}\n")),t("ul",null,t("li",{parentName:"ul"},"to enable ",t("strong",{parentName:"li"},"use throughout the whole page")," (at any point in the DOM), you want to add the css variable to the highest possible level (most generic). You can do this by using ",t("inlineCode",{parentName:"li"},":root"),", ",t("inlineCode",{parentName:"li"},"html"),", or ",t("inlineCode",{parentName:"li"},"body"),".")),t("pre",null,t("code",i({parentName:"pre"},{className:"language-css"}),"body {\n  --another-css-variable-name: another-value; \n}\n")),t("ul",null,t("li",{parentName:"ul"},t("strong",{parentName:"li"},"naming variables"),' "should" be done by a convention similar to what\'s below from high-level to a lower one (e.g. use ',t("inlineCode",{parentName:"li"},"2018-01-13")," to communicate January 13, 2018 instead of using ",t("inlineCode",{parentName:"li"},"01-13-18"),". ")),t("pre",null,t("code",i({parentName:"pre"},{className:"language-css"}),"body {\n  /* comment containing the description of a defined set of variables */\n  --typeOfThing-primaryDistinction-whatItI(-optionalDistinction): value;\n  --color-primary-background-light: #4a4746;\n}\n")))}p.isMDXComponent=!0,e("__page",(function(){throw new Error("Docs-only story")})).story={parameters:{docsOnly:!0}};var m={title:"Welcome|CSS Variables",includeStories:["__page"]},c={};m.parameters=m.parameters||{},m.parameters.docs=a({},m.parameters.docs||{},{page:function(){return t(l,{mdxStoryNameToId:c},t(p,null))}}),e("default",m)}}}));
//# sourceMappingURL=css-variables.stories-8d6b1ca5.js.map
