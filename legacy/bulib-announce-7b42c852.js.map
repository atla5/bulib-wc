{"version":3,"file":"bulib-announce-7b42c852.js","sources":["../../src/_helpers/storageUtility.js","../../src/announce/announce.js","../../src/announce/bulib-announce.js"],"sourcesContent":["\nconst DEBUG = true;\nconst DEFAULT_STORAGE_EXPIRATION_TIME = 1000 * 60 * 60 * 24 * 1; // 1 day (for now)\n\nfunction _logToConsole(msg){ if(DEBUG){ console.log(\"_storageUtility) \" + msg); }}\n\n/** try reading a value from local memory with a given fallback */\nexport function readExpiringLocalValue(keyName, fallback){\n  let valueToReturn = fallback || false;\n  try{\n    // look in localStorage for our announcement-dismissed variables\n    let storedValue = localStorage.getItem(keyName);\n    let lastUpdated = localStorage.getItem(keyName+\"-when\");\n    \n    // if both localStorage values are present...\n    if(!!storedValue && !!lastUpdated){\n\n      // if it hasn't 'expired', query the value : \n      if( (Date.now() - lastUpdated) < DEFAULT_STORAGE_EXPIRATION_TIME){\n        valueToReturn = localStorage.getItem(keyName) == \"true\";\n        _logToConsole(`unexpired '${keyName}' value of '${storedValue}' read from localStorage`);\n\n      // if it has expired, reset/remove it\n      }else{\n        localStorage.removeItem(keyName);\n        localStorage.removeItem(keyName+\"-when\");\n        _logToConsole(`expired '${keyName}*' values have been removed. will be sending fallback of '${fallback}'`);\n      }\n    }\n  }catch(exception){\n    _logToConsole(`exception trying to get item '${keyName}' from localStorage: '${exception.message}'. returning fallback '${fallback}' instead`);\n    valueToReturn = fallback || false;\n  }finally{\n    return valueToReturn;\n  }\n}\n\n/** try setting a value from local memory with a timestamp of when it was set */\nexport function setExpiringLocalValue(keyName, value){\n  try{ // note: safari breaks with a security error any time 'localStorage' is accessed\n    localStorage.setItem(keyName, value); \n    localStorage.setItem(keyName+\"-when\", Date.now()); \n    _logToConsole(`key '${keyName}' successfully set to value '${value}'.`)\n  }\n  catch(exception){ \n    _logToConsole(\"exception trying to setItem in localStorage: \" + exception.message); \n  }\n}","import {LitElement, html} from 'lit-element/lit-element';\n\nimport {readExpiringLocalValue, setExpiringLocalValue} from '../_helpers/storageUtility';\n\n/* references to google sheets API and the entries within it */\nconst google_sheets_document_id = '1ElW0CUOV3LvcHuYxK2BZfFjo65a-XDrlNJtnrelA6tM';\nconst codes_that_map_to_api_entry = {\n  \"primo-BU\": 0, \"primo\": 1, \"primo-BULAW\": 2, \"primo-journals\": 3, \"primo-test\": 4, \"primo-ISL\": 5,\n  \"testing\": 6,\n  \"wordpress\": 7,\n  \"libguides\": 8, \n  \"libcal\": 9, \n  \"libanswers\": 10, \"libanswers-business\": 11, \"libanswers-spring2020\": 12,\n  \"all\": 13\n}\n\nconst primo_specific_padding = html`\n  <style type=\"text/css\">\n    /* site-specific code for primo's announce-banner.js - adds padding below the search bar */ \n    prm-search-bar { padding-bottom: var(--primo-announce-padding, 60px); }\n    .__xs prm-search-bar, .__sm prm-search-bar { padding-bottom: var(--primo-announce-padding-small, 68px); }\n  </style>\n`;\n\n/**\n * display time-sensitive message, call-to-action across the top of a screen\n */\nexport default class BULAnnounce extends LitElement {\n\n  // rendering the content into the light DOM enables it to be styled by the default css\n  createRenderRoot(){ return this; }\n\n  static get properties() {\n    return {\n      /** unique identifier */\n      code: {type: String},\n      /** information to display to the user */\n      message: {type: String},\n\n      /** (optional) main action displaying the */\n      cta_text: {type: String},\n      /** (optional) link the user should click to address/learn more about the message */\n      cta_url: {type: String},\n      /** (optional) type of message to display (determine ) [info, success, alert, warn] */\n      severity: {type: String},\n      \n      /** (debugging) set the status to dismissed */\n      dismissed: {type: Boolean, reflect: true},\n      /** (debugging) enable logging (click tracking)  */\n      debug: {type: Boolean},\n      /** (debugging) disable show/hide check, cta  */\n      prevent_action: {type: Boolean}\n    };\n  }\n\n  /** when first connected, iff there's a special code, set contents based on the API */\n  connectedCallback(){\n    super.connectedCallback();\n    if(this.code in codes_that_map_to_api_entry){\n      this._logToConsole(`code '${this.code}' in codes_that_map dictionary.`);\n      if(this.prevent_action){ \n        this._logToConsole(\"'prevent_action' stopped the API from being called!\"); \n        return;\n      }\n      else{\n        this.dismissed = true;  // default to dismissed (don't flash before/during the API call)\n        this._logToConsole(`making a call to the SheetsAPI for '${this.code}'.`);\n      }\n      \n      let row_id = codes_that_map_to_api_entry[this.code];\n      fetch('https://spreadsheets.google.com/feeds/list/'+google_sheets_document_id+'/1/public/values?alt=json', { method:'GET', mode:'cors', cache:'no-store' })\n        .then(response => response.json())\n        .then(json => json.feed.entry[row_id])\n        .then(data => this._setDataHelperWithDataFromAPI(data));\n    }\n  }\n\n  /** helper that updates the components information with the Sheets its given */\n  _setDataHelperWithDataFromAPI(data){\n    this._logToConsole(`'show_banner' in the google sheets for '${this.code}' is '${data.gsx$showbanner.$t}'.`);\n\n    // un-dismiss if the 'show_banner' checkbox has been selected\n    if(data.gsx$showbanner.$t == \"TRUE\"){ \n      this.dismissed = false; \n      this.removeAttribute(\"dismissed\");\n    }\n\n    // set the message from the API, but try not \n    let message = data.gsx$messagetext.$t;\n    if(message.length > 0){ this.message = message; }\n    \n    // set additional data\n    this.cta_url = data.gsx$messagelink.$t;\n    this.severity = data.gsx$messageseverity.$t || 'info';\n    this.cta_text = data.gsx$ctatext.$t;\n  }\n\n  render(){\n    let icon = \"\";\n    switch(this.severity){ // material icon code [https://material.io/resources/icons/]\n      case \"success\": icon = \"check_circle\"; break;\n      case \"alert\":   icon = \"announcement\"; break;\n      case \"warn\":    icon = \"report_problem\"; break;\n      case \"info\":\n      default:        icon = \"info\"; break;\n    }\n    let sanitized_message = this.message? this.message.replace(/&#39;/g, \"'\") : \"Please standby while we address an ongoing issue, and email 'ask@bu.edu' if the problem persists\";\n  \n    return html`\n      ${ window.location.pathname.includes(\"primo-explore\") && (this.debug || !this._getDismissedValue()) ? primo_specific_padding: html``}\n      <div class=\"announce-banner${ this.severity != undefined? \" \"+this.severity : \"\"}\" disabled=\"${this._getDismissedValue()}\">\n        <i class=\"material-icons\">${icon}</i>\n        <span class=\"message\">${sanitized_message}</span>\n        ${!!this.cta_url? html`<span class=\"cta\"><a href=\"${this.cta_url}\">${this.cta_text}</a></span>`: ``}\n        <button type=\"button\" @click=\"${(e) => this._toggleDismissed()}\">\n          <i class=\"material-icons\">close</i>&nbsp;<span class=\"txtv\">DISMISS</span>\n        </button>\n      </div>\n    `;\n  }\n\n  /** \n   * attempt to gather dismissal information from 'storageUtility' helper, iff a hardcoded dismissal \n   *   is not already set/present (e.g `dismissed`, `dismissed=\"true\"`, `dismissed=\"false\"`)\n   */\n  _getDismissedValue(){\n    if(this.hasAttribute(\"dismissed\")){\n      // returns true if the attribute is present and set to anything other than 'false'\n      return this.hasAttribute(\"dismissed\") && this.getAttribute(\"dismissed\") !== \"false\";\n    }else{\n      // only check the value when it wouldn't be overwritten anyway\n      return readExpiringLocalValue(this._dismissedId(), false) || false;\n    }\n  }\n\n  /** create and return a unique id to distinguish 'dismissal' information from other instances */\n  _dismissedId(){\n    let dismissed_id = \"announcement-dismissed\";\n    \n    try{ dismissed_id += \"-\"+this.code; }\n    catch(exception){ this._logToConsole(\"error slugifying message to get new id: \" + exception.message); }\n\n    return dismissed_id;\n  }\n\n  /** react to user-triggered dismissal by setting the stored memory value and hardcoded attribute/property */\n  _toggleDismissed(){\n    let value_before = this._getDismissedValue();\n    \n    // auto-update the property and attribute value for the currently loaded tag\n    this.setAttribute(\"dismissed\", !value_before);\n\n    // ensure the component updates (re-renders) and hides (or shows) the component\n    this._logToConsole(`dismiss clicked, session's' '${this._dismissedId()}' value '${value_before}'->'${this._getDismissedValue()}'`);\n    this.requestUpdate(\"dismissed\", value_before);\n\n    // save this updated setting in the localStorage\n    setExpiringLocalValue(this._dismissedId(), !value_before);\n  }\n\n  _logToConsole(message){\n    if(this.debug){ console.log(\"bulib-announce) \" + message); }\n  }\n}\n","import BULAnnounce from \"./announce\";\n\nwindow.customElements.define('bulib-announce', BULAnnounce);"],"names":["DEFAULT_STORAGE_EXPIRATION_TIME","_logToConsole","msg","console","log","codes_that_map_to_api_entry","primo_specific_padding","html","BULAnnounce","this","code","prevent_action","dismissed","row_id","fetch","method","mode","cache","then","response","json","feed","entry","data","_this","_setDataHelperWithDataFromAPI","gsx$showbanner","$t","removeAttribute","message","gsx$messagetext","length","cta_url","gsx$messagelink","severity","gsx$messageseverity","cta_text","gsx$ctatext","icon","sanitized_message","replace","window","location","pathname","includes","debug","_getDismissedValue","undefined","e","_this2","_toggleDismissed","hasAttribute","getAttribute","keyName","fallback","valueToReturn","storedValue","localStorage","getItem","lastUpdated","Date","now","removeItem","exception","readExpiringLocalValue","_dismissedId","dismissed_id","value_before","setAttribute","requestUpdate","value","setItem","setExpiringLocalValue","type","String","Boolean","reflect","LitElement","customElements","define"],"mappings":"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"}